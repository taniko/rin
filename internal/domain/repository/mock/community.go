// Code generated by MockGen. DO NOT EDIT.
// Source: community.go

// Package mock_repository is a generated GoMock package.
package mock_repository

import (
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	account "github.com/taniko/rin/internal/domain/model/account"
	community "github.com/taniko/rin/internal/domain/model/community"
)

// MockCommunity is a mock of Community interface.
type MockCommunity struct {
	ctrl     *gomock.Controller
	recorder *MockCommunityMockRecorder
}

// MockCommunityMockRecorder is the mock recorder for MockCommunity.
type MockCommunityMockRecorder struct {
	mock *MockCommunity
}

// NewMockCommunity creates a new mock instance.
func NewMockCommunity(ctrl *gomock.Controller) *MockCommunity {
	mock := &MockCommunity{ctrl: ctrl}
	mock.recorder = &MockCommunityMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockCommunity) EXPECT() *MockCommunityMockRecorder {
	return m.recorder
}

// Create mocks base method.
func (m *MockCommunity) Create(ctx context.Context, community community.Community, user account.ID) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Create", ctx, community, user)
	ret0, _ := ret[0].(error)
	return ret0
}

// Create indicates an expected call of Create.
func (mr *MockCommunityMockRecorder) Create(ctx, community, user interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Create", reflect.TypeOf((*MockCommunity)(nil).Create), ctx, community, user)
}

// FindByName mocks base method.
func (m *MockCommunity) FindByName(ctx context.Context, name community.Name) (*community.Community, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "FindByName", ctx, name)
	ret0, _ := ret[0].(*community.Community)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// FindByName indicates an expected call of FindByName.
func (mr *MockCommunityMockRecorder) FindByName(ctx, name interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "FindByName", reflect.TypeOf((*MockCommunity)(nil).FindByName), ctx, name)
}
